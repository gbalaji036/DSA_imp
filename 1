#include <stdio.h> 
#include <stdlib.h> 
#define MAX 5   
void push(int stack[], int *top, int element) { 
    if (*top == MAX - 1) { 
      printf("Stack Overflow! Cannot push %d onto the stack.\n", element); 
    }
 else
    { 
    (*top)++; 
    stack[*top] = element; 
     printf("Pushed %d onto the stack.\n", element); 
   } 
} 
// Function to pop an element from the stack 
void pop(int stack[], int *top) { 
       if (*top == -1) { 
      printf("Stack Underflow! No elements to pop.\n"); 
} 
else
 { 
   printf("Popped %d from the stack.\n", stack[*top]); 
   (*top)--; 
 } 
} 
// Function to display the current status of the stack 
void display(int stack[], int top) { 
    if (top == -1) { 
      printf("Stack is empty.\n"); 
} 
else 
  { 
     printf("Stack elements: "); 
      for (int i = top; i >= 0; i--) { 
       printf("%d ", stack[i]); 
    } 
   printf("\n"); 
  } 
} 
int main() { 
int stack[MAX];  // Array to hold stack elements 
int top = -1;    // Initialize the top of the stack to -1 (stack is empty) 
int choice, element; 
while (1) {  
  printf("\nMenu:\n"); 
  printf("1. Push an Element onto Stack\n"); 
  printf("2. Pop an Element from Stack\n"); 
  printf("3. Display the Status of Stack\n"); 
  printf("4. Exit\n"); 
  printf("Enter your choice: "); 
  scanf("%d", &choice); 
switch (choice) { 
    case 1: 
            printf("Enter the element to push: "); 
            scanf("%d", &element); 
            push(stack, &top, element); 
            break; 
     case 2: 
            pop(stack, &top); 
            break; 
      case 3: 
             display(stack, top); 
             break; 
     case 4: 
            exit(0); 
     default: 
             printf("Invalid choice. Please try again.\n"); 
       } 
   }  
       return 0; 
}
